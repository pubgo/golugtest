// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.11.4
// source: proto/login/bind.proto

// 绑定手机号

package login

import (
	context "context"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/golang/protobuf/proto"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type CheckRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 区号
	NationCode string `protobuf:"bytes,1,opt,name=nationCode,proto3" json:"nationCode,omitempty"`
	// 手机号
	Telephone string `protobuf:"bytes,2,opt,name=telephone,proto3" json:"telephone,omitempty"`
	// uid
	Uid int64 `protobuf:"varint,3,opt,name=uid,proto3" json:"uid,omitempty"`
	// 前缀,通常为空,抖音必须为DY-
	Origin string `protobuf:"bytes,4,opt,name=origin,proto3" json:"origin,omitempty"`
}

func (x *CheckRequest) Reset() {
	*x = CheckRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_login_bind_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckRequest) ProtoMessage() {}

func (x *CheckRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_login_bind_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckRequest.ProtoReflect.Descriptor instead.
func (*CheckRequest) Descriptor() ([]byte, []int) {
	return file_proto_login_bind_proto_rawDescGZIP(), []int{0}
}

func (x *CheckRequest) GetNationCode() string {
	if x != nil {
		return x.NationCode
	}
	return ""
}

func (x *CheckRequest) GetTelephone() string {
	if x != nil {
		return x.Telephone
	}
	return ""
}

func (x *CheckRequest) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *CheckRequest) GetOrigin() string {
	if x != nil {
		return x.Origin
	}
	return ""
}

type CheckResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// code,不为0为错误
	Code int64 `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	// 错误信息
	Msg string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	// 时间戳
	NowTime int64 `protobuf:"varint,3,opt,name=nowTime,proto3" json:"nowTime,omitempty"`
	// 数据
	Data map[string]string `protobuf:"bytes,4,rep,name=data,proto3" json:"data,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *CheckResponse) Reset() {
	*x = CheckResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_login_bind_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckResponse) ProtoMessage() {}

func (x *CheckResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_login_bind_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckResponse.ProtoReflect.Descriptor instead.
func (*CheckResponse) Descriptor() ([]byte, []int) {
	return file_proto_login_bind_proto_rawDescGZIP(), []int{1}
}

func (x *CheckResponse) GetCode() int64 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *CheckResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *CheckResponse) GetNowTime() int64 {
	if x != nil {
		return x.NowTime
	}
	return 0
}

func (x *CheckResponse) GetData() map[string]string {
	if x != nil {
		return x.Data
	}
	return nil
}

type BindVerifyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 区号
	NationCode string `protobuf:"bytes,1,opt,name=nationCode,proto3" json:"nationCode,omitempty"`
	// 手机号
	Telephone string `protobuf:"bytes,2,opt,name=telephone,proto3" json:"telephone,omitempty"`
	// uid
	Uid int64 `protobuf:"varint,3,opt,name=uid,proto3" json:"uid,omitempty"`
	// 验证码
	Code string `protobuf:"bytes,4,opt,name=code,proto3" json:"code,omitempty"`
	// 前缀,通常为空,抖音必须为DY-
	Origin string `protobuf:"bytes,5,opt,name=origin,proto3" json:"origin,omitempty"`
}

func (x *BindVerifyRequest) Reset() {
	*x = BindVerifyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_login_bind_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BindVerifyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BindVerifyRequest) ProtoMessage() {}

func (x *BindVerifyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_login_bind_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BindVerifyRequest.ProtoReflect.Descriptor instead.
func (*BindVerifyRequest) Descriptor() ([]byte, []int) {
	return file_proto_login_bind_proto_rawDescGZIP(), []int{2}
}

func (x *BindVerifyRequest) GetNationCode() string {
	if x != nil {
		return x.NationCode
	}
	return ""
}

func (x *BindVerifyRequest) GetTelephone() string {
	if x != nil {
		return x.Telephone
	}
	return ""
}

func (x *BindVerifyRequest) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *BindVerifyRequest) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *BindVerifyRequest) GetOrigin() string {
	if x != nil {
		return x.Origin
	}
	return ""
}

type BindVerifyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// code
	Code int64 `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	// 消息
	Msg string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	// 时间戳
	NowTime int64 `protobuf:"varint,3,opt,name=nowTime,proto3" json:"nowTime,omitempty"`
	// 数据
	Data map[string]string `protobuf:"bytes,4,rep,name=data,proto3" json:"data,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *BindVerifyResponse) Reset() {
	*x = BindVerifyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_login_bind_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BindVerifyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BindVerifyResponse) ProtoMessage() {}

func (x *BindVerifyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_login_bind_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BindVerifyResponse.ProtoReflect.Descriptor instead.
func (*BindVerifyResponse) Descriptor() ([]byte, []int) {
	return file_proto_login_bind_proto_rawDescGZIP(), []int{3}
}

func (x *BindVerifyResponse) GetCode() int64 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *BindVerifyResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *BindVerifyResponse) GetNowTime() int64 {
	if x != nil {
		return x.NowTime
	}
	return 0
}

func (x *BindVerifyResponse) GetData() map[string]string {
	if x != nil {
		return x.Data
	}
	return nil
}

type BindData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// uid
	BindId int64 `protobuf:"varint,1,opt,name=bindId,proto3" json:"bindId,omitempty"`
}

func (x *BindData) Reset() {
	*x = BindData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_login_bind_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BindData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BindData) ProtoMessage() {}

func (x *BindData) ProtoReflect() protoreflect.Message {
	mi := &file_proto_login_bind_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BindData.ProtoReflect.Descriptor instead.
func (*BindData) Descriptor() ([]byte, []int) {
	return file_proto_login_bind_proto_rawDescGZIP(), []int{4}
}

func (x *BindData) GetBindId() int64 {
	if x != nil {
		return x.BindId
	}
	return 0
}

type BindChangeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 区号
	NationCode string `protobuf:"bytes,1,opt,name=nationCode,proto3" json:"nationCode,omitempty"`
	// 手机号
	Telephone string `protobuf:"bytes,2,opt,name=telephone,proto3" json:"telephone,omitempty"`
	// uid
	Uid int64 `protobuf:"varint,3,opt,name=uid,proto3" json:"uid,omitempty"`
	// 验证码
	Code string `protobuf:"bytes,4,opt,name=code,proto3" json:"code,omitempty"`
	// 前缀,通常为空,抖音必须为DY-
	Origin string `protobuf:"bytes,5,opt,name=origin,proto3" json:"origin,omitempty"`
}

func (x *BindChangeRequest) Reset() {
	*x = BindChangeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_login_bind_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BindChangeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BindChangeRequest) ProtoMessage() {}

func (x *BindChangeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_login_bind_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BindChangeRequest.ProtoReflect.Descriptor instead.
func (*BindChangeRequest) Descriptor() ([]byte, []int) {
	return file_proto_login_bind_proto_rawDescGZIP(), []int{5}
}

func (x *BindChangeRequest) GetNationCode() string {
	if x != nil {
		return x.NationCode
	}
	return ""
}

func (x *BindChangeRequest) GetTelephone() string {
	if x != nil {
		return x.Telephone
	}
	return ""
}

func (x *BindChangeRequest) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *BindChangeRequest) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *BindChangeRequest) GetOrigin() string {
	if x != nil {
		return x.Origin
	}
	return ""
}

type BindChangeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// code
	Code int64 `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	// msg
	Msg string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	// 时间戳
	NowTime int64 `protobuf:"varint,3,opt,name=nowTime,proto3" json:"nowTime,omitempty"`
	// 数据
	Data *BindData `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *BindChangeResponse) Reset() {
	*x = BindChangeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_login_bind_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BindChangeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BindChangeResponse) ProtoMessage() {}

func (x *BindChangeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_login_bind_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BindChangeResponse.ProtoReflect.Descriptor instead.
func (*BindChangeResponse) Descriptor() ([]byte, []int) {
	return file_proto_login_bind_proto_rawDescGZIP(), []int{6}
}

func (x *BindChangeResponse) GetCode() int64 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *BindChangeResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *BindChangeResponse) GetNowTime() int64 {
	if x != nil {
		return x.NowTime
	}
	return 0
}

func (x *BindChangeResponse) GetData() *BindData {
	if x != nil {
		return x.Data
	}
	return nil
}

type AutomaticBindRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 区号
	NationCode string `protobuf:"bytes,1,opt,name=nationCode,proto3" json:"nationCode,omitempty"`
	// 手机号
	Telephone string `protobuf:"bytes,2,opt,name=telephone,proto3" json:"telephone,omitempty"`
	// uid
	Uid int64 `protobuf:"varint,3,opt,name=uid,proto3" json:"uid,omitempty"`
	// 前缀,通常为空,抖音必须为DY-
	Origin string `protobuf:"bytes,4,opt,name=origin,proto3" json:"origin,omitempty"`
}

func (x *AutomaticBindRequest) Reset() {
	*x = AutomaticBindRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_login_bind_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AutomaticBindRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AutomaticBindRequest) ProtoMessage() {}

func (x *AutomaticBindRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_login_bind_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AutomaticBindRequest.ProtoReflect.Descriptor instead.
func (*AutomaticBindRequest) Descriptor() ([]byte, []int) {
	return file_proto_login_bind_proto_rawDescGZIP(), []int{7}
}

func (x *AutomaticBindRequest) GetNationCode() string {
	if x != nil {
		return x.NationCode
	}
	return ""
}

func (x *AutomaticBindRequest) GetTelephone() string {
	if x != nil {
		return x.Telephone
	}
	return ""
}

func (x *AutomaticBindRequest) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *AutomaticBindRequest) GetOrigin() string {
	if x != nil {
		return x.Origin
	}
	return ""
}

type AutomaticBindResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// code
	Code int64 `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	// 消息
	Msg string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	// 时间戳
	NowTime int64 `protobuf:"varint,3,opt,name=nowTime,proto3" json:"nowTime,omitempty"`
	// 数据
	Data *BindData `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *AutomaticBindResponse) Reset() {
	*x = AutomaticBindResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_login_bind_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AutomaticBindResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AutomaticBindResponse) ProtoMessage() {}

func (x *AutomaticBindResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_login_bind_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AutomaticBindResponse.ProtoReflect.Descriptor instead.
func (*AutomaticBindResponse) Descriptor() ([]byte, []int) {
	return file_proto_login_bind_proto_rawDescGZIP(), []int{8}
}

func (x *AutomaticBindResponse) GetCode() int64 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *AutomaticBindResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *AutomaticBindResponse) GetNowTime() int64 {
	if x != nil {
		return x.NowTime
	}
	return 0
}

func (x *AutomaticBindResponse) GetData() *BindData {
	if x != nil {
		return x.Data
	}
	return nil
}

type BindPhoneParseRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 用于解析手机号加密数据
	Code string `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
	// 用于解析手机号加密数据
	EncryptedData string `protobuf:"bytes,2,opt,name=encryptedData,proto3" json:"encryptedData,omitempty"`
	// 用于解析手机号加密数据
	Iv string `protobuf:"bytes,3,opt,name=iv,proto3" json:"iv,omitempty"`
	// platformId
	PlatformId int64 `protobuf:"varint,4,opt,name=platformId,proto3" json:"platformId,omitempty"`
	// uid，有uid的情况下不使用code
	Uid int64 `protobuf:"varint,5,opt,name=uid,proto3" json:"uid,omitempty"`
}

func (x *BindPhoneParseRequest) Reset() {
	*x = BindPhoneParseRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_login_bind_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BindPhoneParseRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BindPhoneParseRequest) ProtoMessage() {}

func (x *BindPhoneParseRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_login_bind_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BindPhoneParseRequest.ProtoReflect.Descriptor instead.
func (*BindPhoneParseRequest) Descriptor() ([]byte, []int) {
	return file_proto_login_bind_proto_rawDescGZIP(), []int{9}
}

func (x *BindPhoneParseRequest) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *BindPhoneParseRequest) GetEncryptedData() string {
	if x != nil {
		return x.EncryptedData
	}
	return ""
}

func (x *BindPhoneParseRequest) GetIv() string {
	if x != nil {
		return x.Iv
	}
	return ""
}

func (x *BindPhoneParseRequest) GetPlatformId() int64 {
	if x != nil {
		return x.PlatformId
	}
	return 0
}

func (x *BindPhoneParseRequest) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

type BindPhoneParseResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// code
	Code int64 `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	// 消息
	Msg string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	// 时间戳
	NowTime int64 `protobuf:"varint,3,opt,name=nowTime,proto3" json:"nowTime,omitempty"`
	// 数据
	Data map[string]string `protobuf:"bytes,4,rep,name=data,proto3" json:"data,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *BindPhoneParseResponse) Reset() {
	*x = BindPhoneParseResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_login_bind_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BindPhoneParseResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BindPhoneParseResponse) ProtoMessage() {}

func (x *BindPhoneParseResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_login_bind_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BindPhoneParseResponse.ProtoReflect.Descriptor instead.
func (*BindPhoneParseResponse) Descriptor() ([]byte, []int) {
	return file_proto_login_bind_proto_rawDescGZIP(), []int{10}
}

func (x *BindPhoneParseResponse) GetCode() int64 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *BindPhoneParseResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *BindPhoneParseResponse) GetNowTime() int64 {
	if x != nil {
		return x.NowTime
	}
	return 0
}

func (x *BindPhoneParseResponse) GetData() map[string]string {
	if x != nil {
		return x.Data
	}
	return nil
}

type BindPhoneParseByOneClickRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 用于解析手机号加密数据
	Code string `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
	// platformId
	PlatformId int64 `protobuf:"varint,2,opt,name=platformId,proto3" json:"platformId,omitempty"`
	// telephone 有手机号即验证手机号
	Telephone string `protobuf:"bytes,3,opt,name=telephone,proto3" json:"telephone,omitempty"`
}

func (x *BindPhoneParseByOneClickRequest) Reset() {
	*x = BindPhoneParseByOneClickRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_login_bind_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BindPhoneParseByOneClickRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BindPhoneParseByOneClickRequest) ProtoMessage() {}

func (x *BindPhoneParseByOneClickRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_login_bind_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BindPhoneParseByOneClickRequest.ProtoReflect.Descriptor instead.
func (*BindPhoneParseByOneClickRequest) Descriptor() ([]byte, []int) {
	return file_proto_login_bind_proto_rawDescGZIP(), []int{11}
}

func (x *BindPhoneParseByOneClickRequest) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *BindPhoneParseByOneClickRequest) GetPlatformId() int64 {
	if x != nil {
		return x.PlatformId
	}
	return 0
}

func (x *BindPhoneParseByOneClickRequest) GetTelephone() string {
	if x != nil {
		return x.Telephone
	}
	return ""
}

type BindPhoneParseByOneClickResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// code
	Code int64 `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	// 消息
	Msg string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	// 时间戳
	NowTime int64 `protobuf:"varint,3,opt,name=nowTime,proto3" json:"nowTime,omitempty"`
	// 数据
	Data map[string]string `protobuf:"bytes,4,rep,name=data,proto3" json:"data,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *BindPhoneParseByOneClickResponse) Reset() {
	*x = BindPhoneParseByOneClickResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_login_bind_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BindPhoneParseByOneClickResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BindPhoneParseByOneClickResponse) ProtoMessage() {}

func (x *BindPhoneParseByOneClickResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_login_bind_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BindPhoneParseByOneClickResponse.ProtoReflect.Descriptor instead.
func (*BindPhoneParseByOneClickResponse) Descriptor() ([]byte, []int) {
	return file_proto_login_bind_proto_rawDescGZIP(), []int{12}
}

func (x *BindPhoneParseByOneClickResponse) GetCode() int64 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *BindPhoneParseByOneClickResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *BindPhoneParseByOneClickResponse) GetNowTime() int64 {
	if x != nil {
		return x.NowTime
	}
	return 0
}

func (x *BindPhoneParseByOneClickResponse) GetData() map[string]string {
	if x != nil {
		return x.Data
	}
	return nil
}

var File_proto_login_bind_proto protoreflect.FileDescriptor

var file_proto_login_bind_proto_rawDesc = []byte{
	0x0a, 0x16, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x2f, 0x62, 0x69,
	0x6e, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x1a,
	0x2d, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x67, 0x6f, 0x67, 0x6f,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x67, 0x6f, 0x67, 0x6f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x6f, 0x67, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xaa, 0x01, 0x0a,
	0x0c, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2e, 0x0a,
	0x0a, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x0e, 0xea, 0xde, 0x1f, 0x0a, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x64,
	0x65, 0x52, 0x0a, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x2b, 0x0a,
	0x09, 0x74, 0x65, 0x6c, 0x65, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x0d, 0xea, 0xde, 0x1f, 0x09, 0x74, 0x65, 0x6c, 0x65, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x52,
	0x09, 0x74, 0x65, 0x6c, 0x65, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x19, 0x0a, 0x03, 0x75, 0x69,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x42, 0x07, 0xea, 0xde, 0x1f, 0x03, 0x75, 0x69, 0x64,
	0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x22, 0x0a, 0x06, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0xea, 0xde, 0x1f, 0x06, 0x6f, 0x72, 0x69, 0x67, 0x69,
	0x6e, 0x52, 0x06, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x22, 0xe6, 0x01, 0x0a, 0x0d, 0x43, 0x68,
	0x65, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1c, 0x0a, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x42, 0x08, 0xea, 0xde, 0x1f, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x19, 0x0a, 0x03, 0x6d, 0x73, 0x67,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xea, 0xde, 0x1f, 0x03, 0x6d, 0x73, 0x67, 0x52,
	0x03, 0x6d, 0x73, 0x67, 0x12, 0x25, 0x0a, 0x07, 0x6e, 0x6f, 0x77, 0x54, 0x69, 0x6d, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x03, 0x42, 0x0b, 0xea, 0xde, 0x1f, 0x07, 0x6e, 0x6f, 0x77, 0x54, 0x69,
	0x6d, 0x65, 0x52, 0x07, 0x6e, 0x6f, 0x77, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x3c, 0x0a, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x6c, 0x6f, 0x67, 0x69,
	0x6e, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e,
	0x44, 0x61, 0x74, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x42, 0x08, 0xea, 0xde, 0x1f, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x1a, 0x37, 0x0a, 0x09, 0x44, 0x61, 0x74,
	0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02,
	0x38, 0x01, 0x22, 0xcd, 0x01, 0x0a, 0x11, 0x42, 0x69, 0x6e, 0x64, 0x56, 0x65, 0x72, 0x69, 0x66,
	0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2e, 0x0a, 0x0a, 0x6e, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0e, 0xea, 0xde,
	0x1f, 0x0a, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x0a, 0x6e, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x2b, 0x0a, 0x09, 0x74, 0x65, 0x6c, 0x65,
	0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0d, 0xea, 0xde, 0x1f,
	0x09, 0x74, 0x65, 0x6c, 0x65, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x52, 0x09, 0x74, 0x65, 0x6c, 0x65,
	0x70, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x19, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x03, 0x42, 0x07, 0xea, 0xde, 0x1f, 0x03, 0x75, 0x69, 0x64, 0x52, 0x03, 0x75, 0x69, 0x64,
	0x12, 0x1c, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08,
	0xea, 0xde, 0x1f, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x22,
	0x0a, 0x06, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a,
	0xea, 0xde, 0x1f, 0x06, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x52, 0x06, 0x6f, 0x72, 0x69, 0x67,
	0x69, 0x6e, 0x22, 0xf0, 0x01, 0x0a, 0x12, 0x42, 0x69, 0x6e, 0x64, 0x56, 0x65, 0x72, 0x69, 0x66,
	0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1c, 0x0a, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x42, 0x08, 0xea, 0xde, 0x1f, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x19, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xea, 0xde, 0x1f, 0x03, 0x6d, 0x73, 0x67, 0x52, 0x03, 0x6d,
	0x73, 0x67, 0x12, 0x25, 0x0a, 0x07, 0x6e, 0x6f, 0x77, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x03, 0x42, 0x0b, 0xea, 0xde, 0x1f, 0x07, 0x6e, 0x6f, 0x77, 0x54, 0x69, 0x6d, 0x65,
	0x52, 0x07, 0x6e, 0x6f, 0x77, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x41, 0x0a, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x2e,
	0x42, 0x69, 0x6e, 0x64, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x42, 0x08, 0xea, 0xde,
	0x1f, 0x04, 0x64, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x1a, 0x37, 0x0a, 0x09,
	0x44, 0x61, 0x74, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x2e, 0x0a, 0x08, 0x42, 0x69, 0x6e, 0x64, 0x44, 0x61, 0x74,
	0x61, 0x12, 0x22, 0x0a, 0x06, 0x62, 0x69, 0x6e, 0x64, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x42, 0x0a, 0xea, 0xde, 0x1f, 0x06, 0x62, 0x69, 0x6e, 0x64, 0x49, 0x64, 0x52, 0x06, 0x62,
	0x69, 0x6e, 0x64, 0x49, 0x64, 0x22, 0xcd, 0x01, 0x0a, 0x11, 0x42, 0x69, 0x6e, 0x64, 0x43, 0x68,
	0x61, 0x6e, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2e, 0x0a, 0x0a, 0x6e,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x0e, 0xea, 0xde, 0x1f, 0x0a, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x52,
	0x0a, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x2b, 0x0a, 0x09, 0x74,
	0x65, 0x6c, 0x65, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0d,
	0xea, 0xde, 0x1f, 0x09, 0x74, 0x65, 0x6c, 0x65, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x52, 0x09, 0x74,
	0x65, 0x6c, 0x65, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x19, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x03, 0x42, 0x07, 0xea, 0xde, 0x1f, 0x03, 0x75, 0x69, 0x64, 0x52, 0x03,
	0x75, 0x69, 0x64, 0x12, 0x1c, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x08, 0xea, 0xde, 0x1f, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x12, 0x22, 0x0a, 0x06, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x0a, 0xea, 0xde, 0x1f, 0x06, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x52, 0x06, 0x6f,
	0x72, 0x69, 0x67, 0x69, 0x6e, 0x22, 0xa3, 0x01, 0x0a, 0x12, 0x42, 0x69, 0x6e, 0x64, 0x43, 0x68,
	0x61, 0x6e, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1c, 0x0a, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x42, 0x08, 0xea, 0xde, 0x1f, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x19, 0x0a, 0x03, 0x6d, 0x73,
	0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xea, 0xde, 0x1f, 0x03, 0x6d, 0x73, 0x67,
	0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x25, 0x0a, 0x07, 0x6e, 0x6f, 0x77, 0x54, 0x69, 0x6d, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x42, 0x0b, 0xea, 0xde, 0x1f, 0x07, 0x6e, 0x6f, 0x77, 0x54,
	0x69, 0x6d, 0x65, 0x52, 0x07, 0x6e, 0x6f, 0x77, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x2d, 0x0a, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x6c, 0x6f, 0x67,
	0x69, 0x6e, 0x2e, 0x42, 0x69, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x61, 0x42, 0x08, 0xea, 0xde, 0x1f,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xb2, 0x01, 0x0a, 0x14,
	0x41, 0x75, 0x74, 0x6f, 0x6d, 0x61, 0x74, 0x69, 0x63, 0x42, 0x69, 0x6e, 0x64, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x2e, 0x0a, 0x0a, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f,
	0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0e, 0xea, 0xde, 0x1f, 0x0a, 0x6e, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x0a, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x43, 0x6f, 0x64, 0x65, 0x12, 0x2b, 0x0a, 0x09, 0x74, 0x65, 0x6c, 0x65, 0x70, 0x68, 0x6f, 0x6e,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0d, 0xea, 0xde, 0x1f, 0x09, 0x74, 0x65, 0x6c,
	0x65, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x52, 0x09, 0x74, 0x65, 0x6c, 0x65, 0x70, 0x68, 0x6f, 0x6e,
	0x65, 0x12, 0x19, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x42, 0x07,
	0xea, 0xde, 0x1f, 0x03, 0x75, 0x69, 0x64, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x22, 0x0a, 0x06,
	0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0xea, 0xde,
	0x1f, 0x06, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x52, 0x06, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e,
	0x22, 0xa6, 0x01, 0x0a, 0x15, 0x41, 0x75, 0x74, 0x6f, 0x6d, 0x61, 0x74, 0x69, 0x63, 0x42, 0x69,
	0x6e, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1c, 0x0a, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x42, 0x08, 0xea, 0xde, 0x1f, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x19, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xea, 0xde, 0x1f, 0x03, 0x6d, 0x73, 0x67, 0x52, 0x03,
	0x6d, 0x73, 0x67, 0x12, 0x25, 0x0a, 0x07, 0x6e, 0x6f, 0x77, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x03, 0x42, 0x0b, 0xea, 0xde, 0x1f, 0x07, 0x6e, 0x6f, 0x77, 0x54, 0x69, 0x6d,
	0x65, 0x52, 0x07, 0x6e, 0x6f, 0x77, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x2d, 0x0a, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x6c, 0x6f, 0x67, 0x69, 0x6e,
	0x2e, 0x42, 0x69, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x61, 0x42, 0x08, 0xea, 0xde, 0x1f, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xd1, 0x01, 0x0a, 0x15, 0x42, 0x69,
	0x6e, 0x64, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x50, 0x61, 0x72, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x08, 0xea, 0xde, 0x1f, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x12, 0x37, 0x0a, 0x0d, 0x65, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x65, 0x64, 0x44, 0x61,
	0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x11, 0xea, 0xde, 0x1f, 0x0d, 0x65, 0x6e,
	0x63, 0x72, 0x79, 0x70, 0x74, 0x65, 0x64, 0x44, 0x61, 0x74, 0x61, 0x52, 0x0d, 0x65, 0x6e, 0x63,
	0x72, 0x79, 0x70, 0x74, 0x65, 0x64, 0x44, 0x61, 0x74, 0x61, 0x12, 0x16, 0x0a, 0x02, 0x69, 0x76,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x06, 0xea, 0xde, 0x1f, 0x02, 0x69, 0x76, 0x52, 0x02,
	0x69, 0x76, 0x12, 0x2e, 0x0a, 0x0a, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x49, 0x64,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x42, 0x0e, 0xea, 0xde, 0x1f, 0x0a, 0x70, 0x6c, 0x61, 0x74,
	0x66, 0x6f, 0x72, 0x6d, 0x49, 0x64, 0x52, 0x0a, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d,
	0x49, 0x64, 0x12, 0x19, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x42,
	0x07, 0xea, 0xde, 0x1f, 0x03, 0x75, 0x69, 0x64, 0x52, 0x03, 0x75, 0x69, 0x64, 0x22, 0xf8, 0x01,
	0x0a, 0x16, 0x42, 0x69, 0x6e, 0x64, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x50, 0x61, 0x72, 0x73, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1c, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x42, 0x08, 0xea, 0xde, 0x1f, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x19, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x07, 0xea, 0xde, 0x1f, 0x03, 0x6d, 0x73, 0x67, 0x52, 0x03, 0x6d, 0x73,
	0x67, 0x12, 0x25, 0x0a, 0x07, 0x6e, 0x6f, 0x77, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x03, 0x42, 0x0b, 0xea, 0xde, 0x1f, 0x07, 0x6e, 0x6f, 0x77, 0x54, 0x69, 0x6d, 0x65, 0x52,
	0x07, 0x6e, 0x6f, 0x77, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x45, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x2e, 0x42,
	0x69, 0x6e, 0x64, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x50, 0x61, 0x72, 0x73, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x42,
	0x08, 0xea, 0xde, 0x1f, 0x04, 0x64, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x1a,
	0x37, 0x0a, 0x09, 0x44, 0x61, 0x74, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03,
	0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x9c, 0x01, 0x0a, 0x1f, 0x42, 0x69, 0x6e,
	0x64, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x50, 0x61, 0x72, 0x73, 0x65, 0x42, 0x79, 0x4f, 0x6e, 0x65,
	0x43, 0x6c, 0x69, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0xea, 0xde, 0x1f, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x2e, 0x0a, 0x0a, 0x70, 0x6c,
	0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x42, 0x0e,
	0xea, 0xde, 0x1f, 0x0a, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x49, 0x64, 0x52, 0x0a,
	0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x49, 0x64, 0x12, 0x2b, 0x0a, 0x09, 0x74, 0x65,
	0x6c, 0x65, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0d, 0xea,
	0xde, 0x1f, 0x09, 0x74, 0x65, 0x6c, 0x65, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x52, 0x09, 0x74, 0x65,
	0x6c, 0x65, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x22, 0x8c, 0x02, 0x0a, 0x20, 0x42, 0x69, 0x6e, 0x64,
	0x50, 0x68, 0x6f, 0x6e, 0x65, 0x50, 0x61, 0x72, 0x73, 0x65, 0x42, 0x79, 0x4f, 0x6e, 0x65, 0x43,
	0x6c, 0x69, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1c, 0x0a, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x42, 0x08, 0xea, 0xde, 0x1f, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x19, 0x0a, 0x03, 0x6d, 0x73,
	0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xea, 0xde, 0x1f, 0x03, 0x6d, 0x73, 0x67,
	0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x25, 0x0a, 0x07, 0x6e, 0x6f, 0x77, 0x54, 0x69, 0x6d, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x42, 0x0b, 0xea, 0xde, 0x1f, 0x07, 0x6e, 0x6f, 0x77, 0x54,
	0x69, 0x6d, 0x65, 0x52, 0x07, 0x6e, 0x6f, 0x77, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x4f, 0x0a, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x6c, 0x6f, 0x67,
	0x69, 0x6e, 0x2e, 0x42, 0x69, 0x6e, 0x64, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x50, 0x61, 0x72, 0x73,
	0x65, 0x42, 0x79, 0x4f, 0x6e, 0x65, 0x43, 0x6c, 0x69, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x42, 0x08, 0xea,
	0xde, 0x1f, 0x04, 0x64, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x1a, 0x37, 0x0a,
	0x09, 0x44, 0x61, 0x74, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x32, 0xf4, 0x05, 0x0a, 0x0d, 0x42, 0x69, 0x6e, 0x64, 0x54,
	0x65, 0x6c, 0x65, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x59, 0x0a, 0x05, 0x43, 0x68, 0x65, 0x63,
	0x6b, 0x12, 0x13, 0x2e, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x2e, 0x43,
	0x68, 0x65, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x25, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x1f, 0x22, 0x1a, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x2f, 0x62, 0x69, 0x6e, 0x64,
	0x2d, 0x74, 0x65, 0x6c, 0x65, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x2f, 0x63, 0x68, 0x65, 0x63, 0x6b,
	0x3a, 0x01, 0x2a, 0x12, 0x6e, 0x0a, 0x0a, 0x42, 0x69, 0x6e, 0x64, 0x56, 0x65, 0x72, 0x69, 0x66,
	0x79, 0x12, 0x18, 0x2e, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x2e, 0x42, 0x69, 0x6e, 0x64, 0x56, 0x65,
	0x72, 0x69, 0x66, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x6c, 0x6f,
	0x67, 0x69, 0x6e, 0x2e, 0x42, 0x69, 0x6e, 0x64, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2b, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x25, 0x22, 0x20,
	0x2f, 0x75, 0x73, 0x65, 0x72, 0x2f, 0x62, 0x69, 0x6e, 0x64, 0x2d, 0x74, 0x65, 0x6c, 0x65, 0x70,
	0x68, 0x6f, 0x6e, 0x65, 0x2f, 0x62, 0x69, 0x6e, 0x64, 0x2d, 0x76, 0x65, 0x72, 0x69, 0x66, 0x79,
	0x3a, 0x01, 0x2a, 0x12, 0x6e, 0x0a, 0x0a, 0x42, 0x69, 0x6e, 0x64, 0x43, 0x68, 0x61, 0x6e, 0x67,
	0x65, 0x12, 0x18, 0x2e, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x2e, 0x42, 0x69, 0x6e, 0x64, 0x43, 0x68,
	0x61, 0x6e, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x6c, 0x6f,
	0x67, 0x69, 0x6e, 0x2e, 0x42, 0x69, 0x6e, 0x64, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2b, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x25, 0x22, 0x20,
	0x2f, 0x75, 0x73, 0x65, 0x72, 0x2f, 0x62, 0x69, 0x6e, 0x64, 0x2d, 0x74, 0x65, 0x6c, 0x65, 0x70,
	0x68, 0x6f, 0x6e, 0x65, 0x2f, 0x62, 0x69, 0x6e, 0x64, 0x2d, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65,
	0x3a, 0x01, 0x2a, 0x12, 0x7a, 0x0a, 0x0d, 0x41, 0x75, 0x74, 0x6f, 0x6d, 0x61, 0x74, 0x69, 0x63,
	0x42, 0x69, 0x6e, 0x64, 0x12, 0x1b, 0x2e, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x2e, 0x41, 0x75, 0x74,
	0x6f, 0x6d, 0x61, 0x74, 0x69, 0x63, 0x42, 0x69, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x1c, 0x2e, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x2e, 0x41, 0x75, 0x74, 0x6f, 0x6d, 0x61,
	0x74, 0x69, 0x63, 0x42, 0x69, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x2e, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x28, 0x22, 0x23, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x2f, 0x62,
	0x69, 0x6e, 0x64, 0x2d, 0x74, 0x65, 0x6c, 0x65, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x2f, 0x61, 0x75,
	0x74, 0x6f, 0x6d, 0x61, 0x74, 0x69, 0x63, 0x2d, 0x62, 0x69, 0x6e, 0x64, 0x3a, 0x01, 0x2a, 0x12,
	0x7f, 0x0a, 0x0e, 0x42, 0x69, 0x6e, 0x64, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x50, 0x61, 0x72, 0x73,
	0x65, 0x12, 0x1c, 0x2e, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x2e, 0x42, 0x69, 0x6e, 0x64, 0x50, 0x68,
	0x6f, 0x6e, 0x65, 0x50, 0x61, 0x72, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x1d, 0x2e, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x2e, 0x42, 0x69, 0x6e, 0x64, 0x50, 0x68, 0x6f, 0x6e,
	0x65, 0x50, 0x61, 0x72, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x30,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2a, 0x22, 0x25, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x2f, 0x62, 0x69,
	0x6e, 0x64, 0x2d, 0x74, 0x65, 0x6c, 0x65, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x2f, 0x62, 0x69, 0x6e,
	0x64, 0x2d, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x2d, 0x70, 0x61, 0x72, 0x73, 0x65, 0x3a, 0x01, 0x2a,
	0x12, 0xaa, 0x01, 0x0a, 0x18, 0x42, 0x69, 0x6e, 0x64, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x50, 0x61,
	0x72, 0x73, 0x65, 0x42, 0x79, 0x4f, 0x6e, 0x65, 0x43, 0x6c, 0x69, 0x63, 0x6b, 0x12, 0x26, 0x2e,
	0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x2e, 0x42, 0x69, 0x6e, 0x64, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x50,
	0x61, 0x72, 0x73, 0x65, 0x42, 0x79, 0x4f, 0x6e, 0x65, 0x43, 0x6c, 0x69, 0x63, 0x6b, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x2e, 0x42, 0x69,
	0x6e, 0x64, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x50, 0x61, 0x72, 0x73, 0x65, 0x42, 0x79, 0x4f, 0x6e,
	0x65, 0x43, 0x6c, 0x69, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x3d,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x37, 0x22, 0x32, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x2f, 0x62, 0x69,
	0x6e, 0x64, 0x2d, 0x74, 0x65, 0x6c, 0x65, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x2f, 0x62, 0x69, 0x6e,
	0x64, 0x2d, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x2d, 0x70, 0x61, 0x72, 0x73, 0x65, 0x2d, 0x62, 0x79,
	0x2d, 0x6f, 0x6e, 0x65, 0x2d, 0x63, 0x6c, 0x69, 0x63, 0x6b, 0x3a, 0x01, 0x2a, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_login_bind_proto_rawDescOnce sync.Once
	file_proto_login_bind_proto_rawDescData = file_proto_login_bind_proto_rawDesc
)

func file_proto_login_bind_proto_rawDescGZIP() []byte {
	file_proto_login_bind_proto_rawDescOnce.Do(func() {
		file_proto_login_bind_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_login_bind_proto_rawDescData)
	})
	return file_proto_login_bind_proto_rawDescData
}

var file_proto_login_bind_proto_msgTypes = make([]protoimpl.MessageInfo, 17)
var file_proto_login_bind_proto_goTypes = []interface{}{
	(*CheckRequest)(nil),                     // 0: login.CheckRequest
	(*CheckResponse)(nil),                    // 1: login.CheckResponse
	(*BindVerifyRequest)(nil),                // 2: login.BindVerifyRequest
	(*BindVerifyResponse)(nil),               // 3: login.BindVerifyResponse
	(*BindData)(nil),                         // 4: login.BindData
	(*BindChangeRequest)(nil),                // 5: login.BindChangeRequest
	(*BindChangeResponse)(nil),               // 6: login.BindChangeResponse
	(*AutomaticBindRequest)(nil),             // 7: login.AutomaticBindRequest
	(*AutomaticBindResponse)(nil),            // 8: login.AutomaticBindResponse
	(*BindPhoneParseRequest)(nil),            // 9: login.BindPhoneParseRequest
	(*BindPhoneParseResponse)(nil),           // 10: login.BindPhoneParseResponse
	(*BindPhoneParseByOneClickRequest)(nil),  // 11: login.BindPhoneParseByOneClickRequest
	(*BindPhoneParseByOneClickResponse)(nil), // 12: login.BindPhoneParseByOneClickResponse
	nil,                                      // 13: login.CheckResponse.DataEntry
	nil,                                      // 14: login.BindVerifyResponse.DataEntry
	nil,                                      // 15: login.BindPhoneParseResponse.DataEntry
	nil,                                      // 16: login.BindPhoneParseByOneClickResponse.DataEntry
}
var file_proto_login_bind_proto_depIdxs = []int32{
	13, // 0: login.CheckResponse.data:type_name -> login.CheckResponse.DataEntry
	14, // 1: login.BindVerifyResponse.data:type_name -> login.BindVerifyResponse.DataEntry
	4,  // 2: login.BindChangeResponse.data:type_name -> login.BindData
	4,  // 3: login.AutomaticBindResponse.data:type_name -> login.BindData
	15, // 4: login.BindPhoneParseResponse.data:type_name -> login.BindPhoneParseResponse.DataEntry
	16, // 5: login.BindPhoneParseByOneClickResponse.data:type_name -> login.BindPhoneParseByOneClickResponse.DataEntry
	0,  // 6: login.BindTelephone.Check:input_type -> login.CheckRequest
	2,  // 7: login.BindTelephone.BindVerify:input_type -> login.BindVerifyRequest
	5,  // 8: login.BindTelephone.BindChange:input_type -> login.BindChangeRequest
	7,  // 9: login.BindTelephone.AutomaticBind:input_type -> login.AutomaticBindRequest
	9,  // 10: login.BindTelephone.BindPhoneParse:input_type -> login.BindPhoneParseRequest
	11, // 11: login.BindTelephone.BindPhoneParseByOneClick:input_type -> login.BindPhoneParseByOneClickRequest
	1,  // 12: login.BindTelephone.Check:output_type -> login.CheckResponse
	3,  // 13: login.BindTelephone.BindVerify:output_type -> login.BindVerifyResponse
	6,  // 14: login.BindTelephone.BindChange:output_type -> login.BindChangeResponse
	8,  // 15: login.BindTelephone.AutomaticBind:output_type -> login.AutomaticBindResponse
	10, // 16: login.BindTelephone.BindPhoneParse:output_type -> login.BindPhoneParseResponse
	12, // 17: login.BindTelephone.BindPhoneParseByOneClick:output_type -> login.BindPhoneParseByOneClickResponse
	12, // [12:18] is the sub-list for method output_type
	6,  // [6:12] is the sub-list for method input_type
	6,  // [6:6] is the sub-list for extension type_name
	6,  // [6:6] is the sub-list for extension extendee
	0,  // [0:6] is the sub-list for field type_name
}

func init() { file_proto_login_bind_proto_init() }
func file_proto_login_bind_proto_init() {
	if File_proto_login_bind_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_login_bind_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_login_bind_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_login_bind_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BindVerifyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_login_bind_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BindVerifyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_login_bind_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BindData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_login_bind_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BindChangeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_login_bind_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BindChangeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_login_bind_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AutomaticBindRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_login_bind_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AutomaticBindResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_login_bind_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BindPhoneParseRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_login_bind_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BindPhoneParseResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_login_bind_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BindPhoneParseByOneClickRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_login_bind_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BindPhoneParseByOneClickResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_login_bind_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   17,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_login_bind_proto_goTypes,
		DependencyIndexes: file_proto_login_bind_proto_depIdxs,
		MessageInfos:      file_proto_login_bind_proto_msgTypes,
	}.Build()
	File_proto_login_bind_proto = out.File
	file_proto_login_bind_proto_rawDesc = nil
	file_proto_login_bind_proto_goTypes = nil
	file_proto_login_bind_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// BindTelephoneClient is the client API for BindTelephone service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type BindTelephoneClient interface {
	// 检查是否可以绑定
	Check(ctx context.Context, in *CheckRequest, opts ...grpc.CallOption) (*CheckResponse, error)
	// 通过验证码,校验手机号是否可以接收验证码
	BindVerify(ctx context.Context, in *BindVerifyRequest, opts ...grpc.CallOption) (*BindVerifyResponse, error)
	// 通过验证码,进行手机号绑定,换绑
	BindChange(ctx context.Context, in *BindChangeRequest, opts ...grpc.CallOption) (*BindChangeResponse, error)
	// 手机号绑定,不通过验证码
	AutomaticBind(ctx context.Context, in *AutomaticBindRequest, opts ...grpc.CallOption) (*AutomaticBindResponse, error)
	// 绑定手机号解析，通过第三方小程序code换取手机号
	BindPhoneParse(ctx context.Context, in *BindPhoneParseRequest, opts ...grpc.CallOption) (*BindPhoneParseResponse, error)
	// 绑定手机号解析，通过阿里一键
	BindPhoneParseByOneClick(ctx context.Context, in *BindPhoneParseByOneClickRequest, opts ...grpc.CallOption) (*BindPhoneParseByOneClickResponse, error)
}

type bindTelephoneClient struct {
	cc grpc.ClientConnInterface
}

func NewBindTelephoneClient(cc grpc.ClientConnInterface) BindTelephoneClient {
	return &bindTelephoneClient{cc}
}

func (c *bindTelephoneClient) Check(ctx context.Context, in *CheckRequest, opts ...grpc.CallOption) (*CheckResponse, error) {
	out := new(CheckResponse)
	err := c.cc.Invoke(ctx, "/login.BindTelephone/Check", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bindTelephoneClient) BindVerify(ctx context.Context, in *BindVerifyRequest, opts ...grpc.CallOption) (*BindVerifyResponse, error) {
	out := new(BindVerifyResponse)
	err := c.cc.Invoke(ctx, "/login.BindTelephone/BindVerify", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bindTelephoneClient) BindChange(ctx context.Context, in *BindChangeRequest, opts ...grpc.CallOption) (*BindChangeResponse, error) {
	out := new(BindChangeResponse)
	err := c.cc.Invoke(ctx, "/login.BindTelephone/BindChange", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bindTelephoneClient) AutomaticBind(ctx context.Context, in *AutomaticBindRequest, opts ...grpc.CallOption) (*AutomaticBindResponse, error) {
	out := new(AutomaticBindResponse)
	err := c.cc.Invoke(ctx, "/login.BindTelephone/AutomaticBind", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bindTelephoneClient) BindPhoneParse(ctx context.Context, in *BindPhoneParseRequest, opts ...grpc.CallOption) (*BindPhoneParseResponse, error) {
	out := new(BindPhoneParseResponse)
	err := c.cc.Invoke(ctx, "/login.BindTelephone/BindPhoneParse", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bindTelephoneClient) BindPhoneParseByOneClick(ctx context.Context, in *BindPhoneParseByOneClickRequest, opts ...grpc.CallOption) (*BindPhoneParseByOneClickResponse, error) {
	out := new(BindPhoneParseByOneClickResponse)
	err := c.cc.Invoke(ctx, "/login.BindTelephone/BindPhoneParseByOneClick", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// BindTelephoneServer is the server API for BindTelephone service.
type BindTelephoneServer interface {
	// 检查是否可以绑定
	Check(context.Context, *CheckRequest) (*CheckResponse, error)
	// 通过验证码,校验手机号是否可以接收验证码
	BindVerify(context.Context, *BindVerifyRequest) (*BindVerifyResponse, error)
	// 通过验证码,进行手机号绑定,换绑
	BindChange(context.Context, *BindChangeRequest) (*BindChangeResponse, error)
	// 手机号绑定,不通过验证码
	AutomaticBind(context.Context, *AutomaticBindRequest) (*AutomaticBindResponse, error)
	// 绑定手机号解析，通过第三方小程序code换取手机号
	BindPhoneParse(context.Context, *BindPhoneParseRequest) (*BindPhoneParseResponse, error)
	// 绑定手机号解析，通过阿里一键
	BindPhoneParseByOneClick(context.Context, *BindPhoneParseByOneClickRequest) (*BindPhoneParseByOneClickResponse, error)
}

// UnimplementedBindTelephoneServer can be embedded to have forward compatible implementations.
type UnimplementedBindTelephoneServer struct {
}

func (*UnimplementedBindTelephoneServer) Check(context.Context, *CheckRequest) (*CheckResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Check not implemented")
}
func (*UnimplementedBindTelephoneServer) BindVerify(context.Context, *BindVerifyRequest) (*BindVerifyResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method BindVerify not implemented")
}
func (*UnimplementedBindTelephoneServer) BindChange(context.Context, *BindChangeRequest) (*BindChangeResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method BindChange not implemented")
}
func (*UnimplementedBindTelephoneServer) AutomaticBind(context.Context, *AutomaticBindRequest) (*AutomaticBindResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AutomaticBind not implemented")
}
func (*UnimplementedBindTelephoneServer) BindPhoneParse(context.Context, *BindPhoneParseRequest) (*BindPhoneParseResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method BindPhoneParse not implemented")
}
func (*UnimplementedBindTelephoneServer) BindPhoneParseByOneClick(context.Context, *BindPhoneParseByOneClickRequest) (*BindPhoneParseByOneClickResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method BindPhoneParseByOneClick not implemented")
}

func RegisterBindTelephoneServer(s *grpc.Server, srv BindTelephoneServer) {
	s.RegisterService(&_BindTelephone_serviceDesc, srv)
}

func _BindTelephone_Check_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CheckRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BindTelephoneServer).Check(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/login.BindTelephone/Check",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BindTelephoneServer).Check(ctx, req.(*CheckRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BindTelephone_BindVerify_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BindVerifyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BindTelephoneServer).BindVerify(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/login.BindTelephone/BindVerify",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BindTelephoneServer).BindVerify(ctx, req.(*BindVerifyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BindTelephone_BindChange_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BindChangeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BindTelephoneServer).BindChange(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/login.BindTelephone/BindChange",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BindTelephoneServer).BindChange(ctx, req.(*BindChangeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BindTelephone_AutomaticBind_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AutomaticBindRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BindTelephoneServer).AutomaticBind(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/login.BindTelephone/AutomaticBind",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BindTelephoneServer).AutomaticBind(ctx, req.(*AutomaticBindRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BindTelephone_BindPhoneParse_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BindPhoneParseRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BindTelephoneServer).BindPhoneParse(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/login.BindTelephone/BindPhoneParse",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BindTelephoneServer).BindPhoneParse(ctx, req.(*BindPhoneParseRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BindTelephone_BindPhoneParseByOneClick_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BindPhoneParseByOneClickRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BindTelephoneServer).BindPhoneParseByOneClick(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/login.BindTelephone/BindPhoneParseByOneClick",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BindTelephoneServer).BindPhoneParseByOneClick(ctx, req.(*BindPhoneParseByOneClickRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _BindTelephone_serviceDesc = grpc.ServiceDesc{
	ServiceName: "login.BindTelephone",
	HandlerType: (*BindTelephoneServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Check",
			Handler:    _BindTelephone_Check_Handler,
		},
		{
			MethodName: "BindVerify",
			Handler:    _BindTelephone_BindVerify_Handler,
		},
		{
			MethodName: "BindChange",
			Handler:    _BindTelephone_BindChange_Handler,
		},
		{
			MethodName: "AutomaticBind",
			Handler:    _BindTelephone_AutomaticBind_Handler,
		},
		{
			MethodName: "BindPhoneParse",
			Handler:    _BindTelephone_BindPhoneParse_Handler,
		},
		{
			MethodName: "BindPhoneParseByOneClick",
			Handler:    _BindTelephone_BindPhoneParseByOneClick_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto/login/bind.proto",
}
